{"version":3,"sources":["horas.js","tags.js"],"names":["document","querySelector","busqueda","categoria_id","dia","categoria","dias","querySelectorAll","inputHiddenDia","inputHiddenHora","terminoBusqueda","e","target","name","value","horaPrevia","classList","remove","Object","values","includes","async","url","resultado","fetch","eventos","listadoHoras","forEach","li","add","horasTomadas","map","evento","hora_id","listadoHorasArray","Array","from","filter","dataset","horaId","hora","addEventListener","seleccionarHora","obtenerHorasDisponibles","json","buscarEventos","tagsInput","tagsDiv","tagsInputHidden","tags","mostrarTags","textContent","tag","etiqueta","createElement","onclick","eliminarTag","appendChild","actualizarInputHidden","toString","split","key","trim","length","preventDefault"],"mappings":"CAAA,WAGA,GAFAA,SAAAC,cAAA,UAEA,CACA,IAAAC,EAAA,CACAC,aAAA,GACAC,IAAA,IAGA,MAAAC,EAAAL,SAAAC,cAAA,yBACAK,EAAAN,SAAAO,iBAAA,gBACAC,EAAAR,SAAAC,cAAA,mBACAQ,EAAAT,SAAAC,cAAA,oBAKA,SAAAS,EAAAC,GACAT,EAAAS,EAAAC,OAAAC,MAAAF,EAAAC,OAAAE,MAGAL,EAAAK,MAAA,GACAN,EAAAM,MAAA,GACA,MAAAC,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAIAC,OAAAC,OAAAjB,GAAAkB,SAAA,KAOAC,iBACA,MAAAjB,IAAAA,EAAAD,aAAAA,GAAAD,EACAoB,EAAA,gCAAAlB,kBAAAD,IAEAoB,QAAAC,MAAAF,IAMA,SAAAG,GAEA,MAAAC,EAAA1B,SAAAO,iBAAA,aACAmB,EAAAC,QAAAC,GAAAA,EAAAZ,UAAAa,IAAA,+BAGA,MAAAC,EAAAL,EAAAM,IAAAC,GAAAA,EAAAC,SACAC,EAAAC,MAAAC,KAAAV,GACAQ,EAAAG,OAAAT,IAAAE,EAAAV,SAAAQ,EAAAU,QAAAC,SACAZ,QAAAC,GAAAA,EAAAZ,UAAAC,OAAA,+BAEAjB,SAAAO,iBAAA,8CACAoB,QAAAa,GAAAA,EAAAC,iBAAA,QAAAC,IAfAC,OAFApB,EAAAqB,QARAC,GA4BA,SAAAH,EAAA/B,GAEA,MAAAI,EAAAf,SAAAC,cAAA,8BACAc,GACAA,EAAAC,UAAAC,OAAA,6BAKAN,EAAAC,OAAAI,UAAAa,IAAA,6BACApB,EAAAK,MAAAH,EAAAC,OAAA0B,QAAAC,OAGA/B,EAAAM,MAAAd,SAAAC,cAAA,wBAAAa,MA5DAT,EAAAoC,iBAAA,SAAA/B,GACAJ,EAAAqB,QAAAvB,GAAAA,EAAAqC,iBAAA,SAAA/B,KAfA,GCAA,WACA,MAAAoC,EAAA9C,SAAAC,cAAA,eAEA,GAAA6C,EAAA,CAEA,MAAAC,EAAA/C,SAAAC,cAAA,SACA+C,EAAAhD,SAAAC,cAAA,iBAEA,IAAAgD,EAAA,GAwBA,SAAAC,IACAH,EAAAI,YAAA,GACAF,EAAAtB,QAAAyB,IACA,MAAAC,EAAArD,SAAAsD,cAAA,MACAD,EAAArC,UAAAa,IAAA,mBACAwB,EAAAF,YAAAC,EACAC,EAAAE,QAAAC,EACAT,EAAAU,YAAAJ,KAEAK,IAGA,SAAAF,EAAA7C,GACAA,EAAAC,OAAAK,SACAgC,EAAAA,EAAAZ,OAAAe,GAAAA,IAAAzC,EAAAC,OAAAuC,aACAO,IAGA,SAAAA,IACAV,EAAAlC,MAAAmC,EAAAU,WAxCA,KAAAX,EAAAlC,QACAmC,EAAAD,EAAAlC,MAAA8C,MAAA,KACAV,KAIAJ,EAAAL,iBAAA,YAEA,SAAA9B,GACA,GAAA,MAAAA,EAAAkD,IAAA,CACA,GAAA,KAAAlD,EAAAC,OAAAE,MAAAgD,QAAAnD,EAAAC,OAAAE,MAAAiD,OAAA,EACA,OAEApD,EAAAqD,iBACAf,EAAA,IAAAA,EAAAtC,EAAAC,OAAAE,MAAAgD,QACAhB,EAAAhC,MAAA,GAEAoC,SA5BA","file":"bundle.js","sourcesContent":["(function(){\r\n    const horas = document.querySelector('#horas');\r\n\r\n    if(horas) {\r\n        let busqueda = {\r\n            categoria_id: '',\r\n            dia: ''\r\n        }\r\n\r\n        const categoria = document.querySelector('[name=\"categoria_id\"]');\r\n        const dias = document.querySelectorAll('[name=\"dia\"]');\r\n        const inputHiddenDia = document.querySelector('[name=\"dia_id\"]');\r\n        const inputHiddenHora = document.querySelector('[name=\"hora_id\"]');\r\n\r\n        categoria.addEventListener('change', terminoBusqueda);\r\n        dias.forEach(dia => dia.addEventListener('change', terminoBusqueda));\r\n\r\n        function terminoBusqueda(e) {\r\n            busqueda[e.target.name] = e.target.value;\r\n\r\n            // reiniciar los campos ocultos y los selectores de horas\r\n            inputHiddenHora.value = '';\r\n            inputHiddenDia.value = '';\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n\r\n\r\n            if(Object.values(busqueda).includes('')) {\r\n                return;\r\n            }\r\n\r\n            buscarEventos();\r\n        }\r\n\r\n       async function buscarEventos() {\r\n            const { dia, categoria_id } = busqueda;\r\n            const url = `/api/eventos-horarios?dia_id=${dia}&categoria_id=${categoria_id}`;\r\n\r\n            const resultado = await fetch(url);\r\n            const eventos = await resultado.json();\r\n\r\n            obtenerHorasDisponibles(eventos);\r\n        }\r\n\r\n        function obtenerHorasDisponibles(eventos) {\r\n            // Reiniciar horas\r\n            const listadoHoras = document.querySelectorAll('#horas li');\r\n            listadoHoras.forEach(li => li.classList.add('horas__hora--deshabilitado'));\r\n\r\n            // Comprobar eventos y quitar la clase deshabilitado\r\n            const horasTomadas = eventos.map(evento => evento.hora_id);\r\n            const listadoHorasArray = Array.from(listadoHoras);\r\n            const resultado = listadoHorasArray.filter(li => !horasTomadas.includes(li.dataset.horaId));\r\n            resultado.forEach(li => li.classList.remove('horas__hora--deshabilitado'));\r\n\r\n            const horasDisponibles = document.querySelectorAll('#horas li:not(.horas__hora--deshabilitado)');\r\n            horasDisponibles.forEach(hora => hora.addEventListener('click', seleccionarHora));\r\n        }\r\n\r\n        function seleccionarHora(e) {\r\n            // Deshabilitar horas seleccionadas\r\n            const horaPrevia = document.querySelector('.horas__hora--seleccionada');\r\n            if(horaPrevia) {\r\n                horaPrevia.classList.remove('horas__hora--seleccionada');\r\n            }\r\n        \r\n\r\n            // Agregar clase de seleccionado\r\n            e.target.classList.add('horas__hora--seleccionada');\r\n            inputHiddenHora.value = e.target.dataset.horaId;\r\n\r\n            // Llenar el campo oculto del d√≠a\r\n            inputHiddenDia.value = document.querySelector('[name=\"dia\"]:checked').value;\r\n        }\r\n    }\r\n})();","(function () {\r\n    const tagsInput = document.querySelector('#tags_input');\r\n\r\n    if(tagsInput) {\r\n\r\n        const tagsDiv = document.querySelector('#tags');\r\n        const tagsInputHidden = document.querySelector('[name=\"tags\"]');\r\n\r\n        let tags = [];\r\n\r\n        // Recuperar del input oculto\r\n        if(tagsInputHidden.value !== '') {\r\n            tags = tagsInputHidden.value.split(',');\r\n            mostrarTags();\r\n        }\r\n\r\n        // Escuchar los cambios en el input\r\n        tagsInput.addEventListener('keypress', guardarTag)\r\n\r\n        function guardarTag(e) {\r\n            if(e.key === ',') { \r\n                if(e.target.value.trim() === '' || e.target.value.length < 1) {\r\n                    return;\r\n                }\r\n                e.preventDefault();\r\n                tags = [...tags, e.target.value.trim()];\r\n                tagsInput.value = '';\r\n\r\n                mostrarTags();\r\n            }\r\n        }\r\n\r\n        function mostrarTags() {\r\n            tagsDiv.textContent = '';\r\n            tags.forEach(tag => {\r\n                const etiqueta =document.createElement('LI');\r\n                etiqueta.classList.add('formulario__tag');\r\n                etiqueta.textContent = tag;\r\n                etiqueta.onclick = eliminarTag;\r\n                tagsDiv.appendChild(etiqueta);\r\n            })\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function eliminarTag(e) {\r\n            e.target.remove();\r\n            tags = tags.filter(tag => tag !== e.target.textContent);\r\n            actualizarInputHidden();\r\n        }\r\n\r\n        function actualizarInputHidden() {\r\n            tagsInputHidden.value = tags.toString();\r\n        }\r\n    }\r\n})()"]}